# Start AeroSpace at login
start-at-login = true

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = ['exec-and-forget sketchybar']

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
# accordion-padding = 30
accordion-padding = 250

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

#
# SketchyBar plugin
#
exec-on-workspace-change = ['/bin/bash', '-c',
  'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE'
]

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors

# aerospace list-monitors
# 1 | LC27G7xT
# 2 | Built-in Retina Display

[gaps]
inner.horizontal = 5
inner.vertical =   5
outer.left =       5
outer.bottom =     5
# outer.top =        5
outer.top = [{ monitor.'built-in' = 5 }, 28]
outer.right =      5

# 'main' binding mode declaration
# 'main' binding mode must be always presented
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# Disable hide application shortcuts
cmd-h = [] # Disable "hide application"
# cmd-alt-h = [] # Disable "hide others"

# Keybindings for layout management
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

# alt-h = 'focus left'
# alt-j = 'focus down'
# alt-k = 'focus up'
# alt-l = 'focus right'

cmd-alt-h = 'focus left'
cmd-alt-j = 'focus down'
cmd-alt-k = 'focus up'
cmd-alt-l = 'focus right'

alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

# Keybindings for workspace navigation
alt-1 = 'workspace 1'
alt-2 = 'workspace 2'
alt-3 = 'workspace 3'
alt-a = 'workspace A' # In your config, you can drop workspace bindings that you don't need
alt-c = 'workspace C'
alt-d = 'workspace D'
alt-e = 'workspace E'
alt-m = 'workspace M'
alt-q = 'workspace Q'
alt-r = 'workspace R'
alt-s = 'workspace S'
alt-t = 'workspace T'
alt-w = 'workspace W'
alt-x = 'workspace X'
alt-z = 'workspace Z'

alt-shift-1 = 'move-node-to-workspace --focus-follows-window 1'
alt-shift-2 = 'move-node-to-workspace --focus-follows-window 2'
alt-shift-3 = 'move-node-to-workspace --focus-follows-window 3'
alt-shift-a = 'move-node-to-workspace --focus-follows-window A'
alt-shift-c = 'move-node-to-workspace --focus-follows-window C'
alt-shift-d = 'move-node-to-workspace --focus-follows-window D'
alt-shift-e = 'move-node-to-workspace --focus-follows-window E'
alt-shift-m = 'move-node-to-workspace --focus-follows-window M'
alt-shift-q = 'move-node-to-workspace --focus-follows-window Q'
alt-shift-r = 'move-node-to-workspace --focus-follows-window R'
alt-shift-s = 'move-node-to-workspace --focus-follows-window S'
alt-shift-t = 'move-node-to-workspace --focus-follows-window T'
alt-shift-w = 'move-node-to-workspace --focus-follows-window W'
alt-shift-x = 'move-node-to-workspace --focus-follows-window X'
alt-shift-z = 'move-node-to-workspace --focus-follows-window Z'

# Other Keybindings
alt-tab = 'workspace-back-and-forth'
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'
alt-shift-space = 'layout floating tiling'
alt-shift-f = 'fullscreen'
alt-shift-semicolon = 'mode service'

alt-backtick = 'exec-and-forget open -a kitty'
# alt-backtick = 'exec-and-forget open -a WezTerm'

# Aerospace application configuration settings
# run `aerospace list-apps` to get a list of running apps

# [[on-window-detected]]
# if.app-id = 'com.apple.systempreferences'
# if.app-name-regex-substring = 'settings'
# if.window-title-regex-substring = 'substring'
# if.workspace = 'workspace-name'
# if.during-aerospace-startup = true
# check-further-callbacks = true
# run = ['layout floating', 'move-node-to-workspace S']  # The callback itself

#
# Floating Apps
#

# # Make all windows float by default
# [[on-window-detected]]
# check-further-callbacks = true
# run = 'layout floating'

# Set iTerm2 to open as a floating Quake-style terminal
[[on-window-detected]]
if.app-id = 'com.googlecode.iterm2'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.ActivityMonitor'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.reminders'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.weather'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.Preview'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'company.thebrowser.Browser'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.google.Chrome.app.cinhimbnkkaeohfgghhklpknlkffjgod'
run = 'layout floating'

# # Any window opened from the 'T' workspace should have floating behavior
# [[on-window-detected]]
# if.workspace = 'T'
# run = 'layout floating'

[workspace-to-monitor-force-assignment]
# 1 = 1                            # Monitor sequence number from left to right. 1-based indexing
# 2 = 'main'                       # Main monitor
# 3 = 'secondary'                  # Non-main monitor in case when there are only two monitors
# 4 = 'built-in'                   # Case insensitive regex substring
# 5 = '^built-in retina display$'  # Case insensitive regex match
# 6 = ['secondary', 'dell']        # You can specify multiple patterns. The first matching pattern will be used
T = ['secondary', '^VP27', '^LC27']
Q = 'built-in'

#
# Workspace-App assignment
#

[[on-window-detected]]
if.during-aerospace-startup = true
if.app-id = 'company.thebrowser.Browser'
run = ['layout tiling', 'move-node-to-workspace W']

[[on-window-detected]]
if.app-id = 'net.kovidgoyal.kitty'
run = ['layout tiling', 'move-node-to-workspace T']
[[on-window-detected]]
if.app-id = 'com.github.wez.wezterm'
run = ['layout tiling', 'move-node-to-workspace T']

[[on-window-detected]]
if.app-id = 'com.google.Chrome'
run = ['layout tiling', 'move-node-to-workspace Q']

[[on-window-detected]]
if.app-id = 'com.openai.chat'
run = ['layout tiling', 'move-node-to-workspace S']

[[on-window-detected]]
if.app-id = 'md.obsidian'
run = ['layout tiling', 'move-node-to-workspace S']

[[on-window-detected]]
if.app-id = 'io.readwise.read'
run = ['layout tiling', 'move-node-to-workspace R']

[[on-window-detected]]
if.app-id = 'com.apple.mail'
run = ['layout tiling', 'move-node-to-workspace E']

[[on-window-detected]]
if.app-id = 'com.google.Chrome.app.fmgjjmmmlfnkbppncabfkddbjimcfncm'
run = ['layout tiling', 'move-node-to-workspace E']

[[on-window-detected]]
if.app-id = 'com.google.Chrome.app.kjbdgfilnfhdoflbpgamdcdgpehopbep'
run = ['layout tiling', 'move-node-to-workspace E']

[[on-window-detected]]
if.app-id = 'com.google.Chrome.app.mdpkiolbdkhdjpekfbkbmhigcaggjagi'
run = ['layout tiling', 'move-node-to-workspace C']

[[on-window-detected]]
if.app-id = 'com.google.Chrome.app.cinhimbnkkaeohfgghhklpknlkffjgod'
run = ['layout tiling', 'move-node-to-workspace M']

[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS'
run = ['layout tiling', 'move-node-to-workspace F']
[[on-window-detected]]
if.app-id = 'net.whatsapp.WhatsApp'
run = ['layout tiling', 'move-node-to-workspace F']


# 'service' binding mode declaration.
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
alt-shift-f = ['mode main', 'macos-native-fullscreen']
backspace = ['close-all-windows-but-current', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
# s = ['layout sticky tiling', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

down = 'volume down'
up = 'volume up'
shift-down = ['volume set 0', 'mode main']

