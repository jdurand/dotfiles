# ====================
# Startup Configuration
# ====================

start-at-login = true
after-login-command = []
after-startup-command = [
  'exec-and-forget brew services start sketchybar',
  # 'exec-and-forget borders active_color=0xffffffff inactive_color=0xff494d30 width=5.0'
]

# ====================
# Layout Configuration
# ====================

# Normalizations
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# Layout defaults
default-root-container-layout = 'tiles'
default-root-container-orientation = 'auto'  # auto: wide monitors horizontal, tall monitors vertical
accordion-padding = 250

# ====================
# System Integration
# ====================

key-mapping.preset = 'qwerty'

# SketchyBar integration
exec-on-workspace-change = ['/bin/bash', '-c',
  'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE',
  # 'exec-and-forget borders active_color=0xffffffff inactive_color=0xff494d30 width=5.0'
]

# ====================
# Display Configuration
# ====================

# Window gaps
[gaps]
inner.horizontal = 5
inner.vertical =   5
outer.left =       5
outer.bottom =     5
outer.top = [{ monitor.'built-in' = 5 }, 28]  # Extra space for sketchybar on external monitors
outer.right =      5

# ====================
# Keybindings
# ====================

[mode.main.binding]

# Layout management
cmd-comma = 'layout floating tiling'
cmd-period = 'layout accordion horizontal vertical'
cmd-slash = 'layout tiles horizontal vertical'

# Window focus
cmd-h = 'focus left'
cmd-j = 'focus down'
cmd-k = 'focus up'
cmd-l = 'focus right'

# Window movement
cmd-ctrl-h = 'move left'
cmd-ctrl-j = 'move down'
cmd-ctrl-k = 'move up'
cmd-ctrl-l = 'move right'

# Window joining
alt-cmd-h = ['join-with left', 'mode main']
alt-cmd-j = ['join-with down', 'mode main']
alt-cmd-k = ['join-with up', 'mode main']
alt-cmd-l = ['join-with right', 'mode main']

# Window resizing
alt-cmd-shift-j = 'resize smart -50'
alt-cmd-shift-k = 'resize smart +50'
alt-cmd-shift-h = "resize width -50"
alt-cmd-shift-l = "resize width +50"
cmd-shift-minus = 'resize smart -50'
cmd-shift-equal = 'resize smart +50'

# Workspace navigation
cmd-1 = 'workspace 1'
cmd-2 = 'workspace 2'
cmd-3 = 'workspace 3'
cmd-b = 'workspace B'
cmd-g = 'workspace G'
cmd-e = 'workspace E'
cmd-m = 'workspace M'
cmd-y = 'workspace Y'

# Move to workspace
cmd-shift-t = 'move-node-to-workspace --focus-follows-window T'
cmd-shift-1 = 'move-node-to-workspace --focus-follows-window 1'
cmd-shift-2 = 'move-node-to-workspace --focus-follows-window 2'
cmd-shift-3 = 'move-node-to-workspace --focus-follows-window 3'
cmd-shift-b = 'move-node-to-workspace --focus-follows-window B'
cmd-shift-g = 'move-node-to-workspace --focus-follows-window G'
cmd-shift-e = 'move-node-to-workspace --focus-follows-window E'
cmd-shift-m = 'move-node-to-workspace --focus-follows-window M'
cmd-shift-y = 'move-node-to-workspace --focus-follows-window Y'

# Other bindings
cmd-tab = 'workspace-back-and-forth'
cmd-shift-tab = 'move-workspace-to-monitor --wrap-around next'
cmd-shift-f = 'fullscreen'
cmd-shift-semicolon = 'mode service'
cmd-backtick = 'exec-and-forget open -a ghostty'

cmd-ctrl-shift-j = "move-workspace-to-monitor next"
cmd-ctrl-shift-k = "move-workspace-to-monitor prev"
# f18 = "workspace-back-and-forth"
f19 = "move-workspace-to-monitor --wrap-around next"

# workspace switching:
# cmd-ctrl-j = "workspace --wrap-around next"
# cmd-ctrl-k = "workspace --wrap-around prev"
#
# Go to non empty workspace on the focused monitor
cmd-shift-j = "exec-and-forget aerospace list-workspaces --monitor focused --empty no | aerospace workspace next --wrap-around"
cmd-shift-k = "exec-and-forget aerospace list-workspaces --monitor focused --empty no | aerospace workspace prev --wrap-around"

# ====================
# Workspace Assignments
# ====================

[workspace-to-monitor-force-assignment]
T = ['secondary', '^VP27', '^LC27']  # Terminal workspace on external monitor

# ====================
# Window Detection Rules
# ====================

# Floating windows
[[on-window-detected]]
if.app-id = 'com.googlecode.iterm2'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.ActivityMonitor'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.reminders'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.weather'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.Preview'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'company.thebrowser.Browser'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'app.zen-browser.zen'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.google.Chrome.app.cinhimbnkkaeohfgghhklpknlkffjgod'
run = 'layout floating'

[[on-window-detected]]
if.app-name-regex-substring = 'password|keychain'
run = 'layout floating'

# Windows without title
[[on-window-detected]]
if.window-title-regex-substring = '^$'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'net.kovidgoyal.kitty'
if.window-title-regex-substring = 'floating-tui'
run = ['layout floating']

# ====================
# Workspace App Assignments
# ====================

# Workspace 1 - Code editors
[[on-window-detected]]
if.app-id = 'com.microsoft.VSCode'
run = ['layout tiling', 'move-node-to-workspace 1']

[[on-window-detected]]
if.app-id = 'com.exafunction.windsurf'
run = ['layout tiling', 'move-node-to-workspace 1']

[[on-window-detected]]
if.app-id = 'com.google.Chrome.app.mdpkiolbdkhdjpekfbkbmhigcaggjagi'
run = ['layout tiling', 'move-node-to-workspace 1']

# Workspace 2 - Chrome
[[on-window-detected]]
if.app-id = 'com.google.Chrome'
run = ['layout tiling', 'move-node-to-workspace 2']

# Workspace Q - AI assistants
[[on-window-detected]]
if.app-id = 'com.openai.chat'
run = ['layout tiling', 'move-node-to-workspace G']

[[on-window-detected]]
if.app-name-regex-substring = 'Gemini'
run = ['layout tiling', 'move-node-to-workspace G']

[[on-window-detected]]
if.app-id = 'com.anthropic.claudefordesktop'
# run = ['layout tiling', 'move-node-to-workspace G']
run = ['layout floating'] # needed for the quick input window to behave

# Workspace W - Browsers (on startup)
[[on-window-detected]]
if.during-aerospace-startup = true
if.app-id = 'company.thebrowser.Browser'
run = ['layout tiling', 'move-node-to-workspace B']

[[on-window-detected]]
if.during-aerospace-startup = true
if.app-id = 'app.zen-browser.zen'
run = ['layout tiling', 'move-node-to-workspace B']

# Workspace E - Email & calendar
[[on-window-detected]]
if.app-id = 'com.apple.mail'
run = ['layout tiling', 'move-node-to-workspace E']

[[on-window-detected]]
if.app-id = 'com.google.Chrome.app.fmgjjmmmlfnkbppncabfkddbjimcfncm'
run = ['layout tiling', 'move-node-to-workspace E']

[[on-window-detected]]
if.app-id = 'com.google.Chrome.app.kjbdgfilnfhdoflbpgamdcdgpehopbep'
run = ['layout tiling', 'move-node-to-workspace E']

# Workspace R - Reading & notes
[[on-window-detected]]
if.app-id = 'io.readwise.read'
run = ['layout tiling', 'move-node-to-workspace R']

[[on-window-detected]]
if.app-id = 'md.obsidian'
run = ['layout tiling', 'move-node-to-workspace R']

# Workspace T - Terminal
[[on-window-detected]]
if.app-id = 'com.mitchellh.ghostty'
run = ['layout tiling', 'move-node-to-workspace T']

# Workspace M - Music
[[on-window-detected]]
if.app-id = 'com.google.Chrome.app.cinhimbnkkaeohfgghhklpknlkffjgod'
run = ['layout tiling', 'move-node-to-workspace M']

# Workspace F - Communication (not shown in current config but referenced)
[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS'
run = ['layout tiling', 'move-node-to-workspace F']

[[on-window-detected]]
if.app-id = 'net.whatsapp.WhatsApp'
run = ['layout tiling', 'move-node-to-workspace F']

# ====================
# Service Mode
# ====================

[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main']  # reset layout
f = ['layout floating tiling', 'mode main']  # toggle floating/tiling
cmd-shift-f = ['mode main', 'macos-native-fullscreen']
backspace = ['close-all-windows-but-current', 'mode main']
