#!/bin/bash

set -e

# Helper function to echo with information
info() {
  echo -e "\033[1;34m[INFO]\033[0m $*"
}

warn() {
  echo -e "\033[1;33m[WARN]\033[0m $*"
}

# Helper function for symlink creation with checks
create_symlink() {
  local target=$1
  local link=$2

  if [ -L "$link" ]; then
    info "Symlink $link already exists, leaving it in place."
  elif [ -e "$link" ]; then
    echo -e "\033[1;31m[ERROR]\033[0m $link already exists and is not a symlink."
  else
    ln -s "$target" "$link"
    info "Created symlink $link -> $target"
  fi
}

# Function to check and install package if necessary
install_package_if_needed() {
  local package=$1
  if ! command -v brew &>/dev/null; then
    info "Homebrew is not installed. Skipping installation of ${package}."
    return
  fi

  if ! brew list --formula -1 | grep -q "^${package}\$"; then
    info "Installing ${package} with brew..."
    brew install "${package}"
  else
    info "${package} is already installed."
  fi
}

# Install Ghostty terminal emulator with Starship prompt & Victor Mono font
if [[ "$OSTYPE" == "darwin"* ]]; then
  for package in ghostty starship font-victor-mono font-victor-mono-nerd-font; do
    install_package_if_needed "${package}"
  done
elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
  if command -v xrandr > /dev/null; then
    sudo apt-get install ghostty
    warn "you must manually install font-victor-mono font-victor-mono-nerd-font!"
  else
    warn "Skipping ghostty installation on Synology device or non-GUI system"
  fi
# else
#   "Unsupported OS type: $OSTYPE"
fi

# Install required packages for Zsh plugins and aliases
for package in direnv fzf zoxide eza gh jq; do
  install_package_if_needed "${package}"
done

# Install required packages for Yazi
for package in yazi ffmpegthumbnailer sevenzip poppler fd ripgrep imagemagick; do
  install_package_if_needed "${package}"
done
if [[ "$OSTYPE" == "darwin"* ]]; then
  install_package_if_needed "font-symbols-only-nerd-font"
fi

# Install required packages for Tmux Tokyo Night Theme
for package in bc coreutils gawk glab gsed; do
  install_package_if_needed "${package}"
done
if [[ "$OSTYPE" == "darwin"* ]]; then
  install_package_if_needed "nowplaying-cli"
fi

# Install other dependencies
for package in tmuxinator; do
  install_package_if_needed "${package}"
done

cd ~
echo "Setting up dotfiles locally..."

if [ -d ".dotfiles" ]; then
  cd .dotfiles
  if git diff-index --quiet HEAD --; then
    info "Pulling latest changes..."
    git pull
  else
    info "There are uncommitted changes. Please commit or stash them before pulling new changes."
  fi
else
  info "Cloning dotfiles repository..."
  git clone https://github.com/jdurand/dotfiles.git .dotfiles
  # git clone git@github.com:jdurand/dotfiles.git .dotfiles
fi

# Setup Symlinks
info "Setting up symlinks..."

# Direct symlink mappings
declare -A SYMLINKS=(
  ["$HOME/.dotfiles/zsh"]="$HOME/.zsh"
  ["$HOME/.dotfiles/zsh/zshrc"]="$HOME/.zshrc"
  ["$HOME/.dotfiles/tmux"]="$HOME/.tmux"
  ["$HOME/.dotfiles/tmux/tmux.conf"]="$HOME/.tmux.conf"
  ["$HOME/.dotfiles/vim"]="$HOME/.vim"
  ["$HOME/.dotfiles/vim/vimrc"]="$HOME/.vimrc"
  ["$HOME/.dotfiles/fzf/fzf.zsh"]="$HOME/.fzf.zsh"
  ["$HOME/.dotfiles/fzf"]="$HOME/.fzf"
  ["$HOME/.dotfiles/wezterm/config.lua"]="$HOME/.wezterm.lua"
)

# Iterate through and create symlinks
for target in "${!SYMLINKS[@]}"; do
  create_symlink "$target" "${SYMLINKS[$target]}"
done

# Ensure ~/.config directory exists
info "Ensuring ~/.config directory exists..."
mkdir -p ~/.config

# Symlink directories inside ~/.dotfiles to ~/.config
cd ~/.dotfiles
for dir in alacritty kitty ghostty tmuxinator nvim bat; do
  if [ -d "$dir" ]; then
    create_symlink "$HOME/.dotfiles/$dir" "$HOME/.config/$dir"
  else
    info "Skipping $dir as it is not a directory in ~/.dotfiles"
  fi
done

# Create symlink for starship.toml
create_symlink "$HOME/.dotfiles/starship/starship.toml" "$HOME/.config/starship.toml"

# Create symlink for the default .tmuxinator.yml
create_symlink "$HOME/.dotfiles/tmuxinator/tmuxinator.yml" "$HOME/.tmuxinator.yml"

# Create a symbolic links for Linux
if [[ "$OSTYPE" == "linux-gnu"* ]]; then
  create_symlink "$HOME/.dotfiles/imwheel/imwheelrc" "$HOME/.imwheelrc"
fi

info "All tasks completed successfully."
